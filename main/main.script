local function random_position()
	return vmath.vector3(math.random(32, 512),math.random(200, 512 - 64), 0)
end

local function spawn_trash_man()
	return factory.create("/trash#trashmanfactory", random_position(), nil, nil, vmath.vector3(1))
end

function init(self)
	msg.post(".", "start_main_menu")
	math.randomseed(os.time())
	self.enemies = {}
	self.time = 5
	self.countdown = self.time 
	self.counter = 2
	self.spawning = false

	self.state = MAIN_MENU
end

function update(self, dt)
	if self.spawning then
		self.counter = self.counter * 1.5
		
		for i = 1, self.counter  do
			table.insert(self.enemies, spawn_trash_man())
		end
		self.counter = self.counter + 1
		self.time = self.time * 1.5
		self.countdown = self.time
		self.spawning = false
	else
		if self.countdown > 0.5 then
			self.countdown = self.countdown - dt
			msg.post("/main#in_game", "update_time", { time = self.countdown })
		elseif self.countdown <= 0.5 then
			self.spawning = true
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("start_main_menu") then
		if self.state ~= "MAIN_MENU" then	
			if self.state == "GAME_RUNNING" then
				msg.post("#game_level_proxy", "unload")
			end
		end
		
		msg.post("#main_menu", "enable")
		self.state = "MAIN_MENU"

	elseif message_id == hash("start_game") then
		msg.post("#game_level_proxy", "load")
		msg.post("#main_menu", "disable")

	elseif message_id == hash("proxy_loaded") then
		if sender == msg.url("#game_level_proxy") then
			msg.post(sender, "enable")
			self.state = "GAME_RUNNING"
		end
	end    
end