
function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("/main#game_level_proxy", "load")
	self.paused = false
	self.pause_node = gui.get_node("stopButton")
end

function final(self)
	msg.post(".", "release_input_focus")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("proxy_loaded") then
		msg.post(sender, "enable")
	elseif message_id == hash("update_time") then
		local time = gui.get_node("countdownInfoText")
		gui.set_text(time, message.time)
	elseif message_id == hash("update_ammo") then
		local ammo = gui.get_node("ammoInfoText")
		gui.set_text(ammo, message.ammo)
	elseif message_id == hash("update_health") then
		if message.health == 2 then
			local health = gui.get_node("hearth00")
			gui.play_flipbook(health, hash("white_hearth"))
		elseif message.health == 1 then
			local health = gui.get_node("hearth00")
			gui.play_flipbook(health, hash("white_hearth"))
			local health1 = gui.get_node("hearth01")
			gui.play_flipbook(health1, hash("white_hearth"))
		elseif message.health == 0 then
			local health = gui.get_node("hearth00")
			gui.play_flipbook(health, hash("white_hearth"))
			local health1 = gui.get_node("hearth01")
			gui.play_flipbook(health1, hash("white_hearth"))
			local health2 = gui.get_node("hearth02")
			gui.play_flipbook(health2, hash("white_hearth"))
			msg.post("@system:", "exit", {code = 0})
		end
	end
end

function on_input(self, action_id, action)
	
	local node = gui.get_node("stopButton")
	if action.pressed and gui.pick_node(node, action.x, action.y) and action_id == hash("touch") then
		local flipbook = gui.get_flipbook(node)
		if flipbook == hash("stop_button_released")  then
			gui.play_flipbook(node, hash("play_button"))
			msg.post("main_menu:/main#game_level_proxy", "set_time_step", {factor = 0, mode = 1})
			msg.post("/cursor", "release_input_focus")
		elseif flipbook == hash("play_button")then
			gui.play_flipbook(node, hash("stop_button_released"))
			msg.post("main_menu:/main#game_level_proxy", "set_time_step", {factor = 1, mode = 1})
			msg.post("/cursor", "acquire_input_focus")
		end

	end
end

